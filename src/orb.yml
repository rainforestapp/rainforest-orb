version: 2.1
description: |
  Rainforest QA's CircleCI Orb
  Pre-requisites:
    - a Rainforest QA account (https://app.rainforestqa.com/trial)
    - a Rainforest QA API token (https://app.rainforestqa.com/settings/integrations)
    - a RunGroup with some tests (https://app.rainforestqa.com/tests)

executors:
  latest:
    description: Latest Rainforest CLI Docker image
    docker:
      - image: gcr.io/rf-public-images/rainforest-cli:latest

jobs:
  run:
    description: Start a new Rainforest run

    parameters:
      description:
        description: An arbitrary string to associate with the run
        type: string
        default: "$CIRCLE_PROJECT_REPONAME - $CIRCLE_BRANCH $CIRCLE_BUILD_NUM $(date +'%Y-%m-%d_%H-%M-%S')"

      run_group_id:
        description: Only run tests tied to this Run Group
        type: integer

      environment_id:
        description: Use a specific environment for this run
        type: string
        default: ""

      conflict:
        description: How should we handle current other runs that are in progress. Values are 'abort' to abort runs in the same environment as your new run and 'abort-all' to abort all runs
        type: enum
        enum: ["abort", "abort-all", ""]
        default: ""

      crowd:
        description: The crowd to use for this run
        type: enum
        enum: ["default", "automation", "on_premise_crowd"]
        default: default

      release:
        description: Manually entered release information about the release the run is associated with
        type: string
        default: "$CIRCLE_SHA1"

      token:
        description: The name of the environment variable containing your Rainforest QA API token
        type: env_var_name
        default: RAINFOREST_TOKEN

      executor:
        description: The executor to run this command in
        type: executor
        default: latest

    executor: <<parameters.executor>>

    steps:
      - run:
          name: Run Rainforest
          command: |
            rainforest-cli run \
              --token ${<< parameters.token >>} \
              --description "<< parameters.description >>" \
              --run-group <<parameters.run_group_id>> \
              <<# parameters.environment_id >> --environment-id << parameters.environment_id >> <</ parameters.environment_id >> \
              <<# parameters.conflict >> --conflict << parameters.conflict >> <</ parameters.conflict >> \
              --release << parameters.release >> \
              --crowd << parameters.crowd >>

examples:
  simple:
    description: |
      Run tests from a specific run group
    usage:
      version: 2.1
      orbs:
        rainforest: rainforest-qa/rainforest@0
      workflows:
        build:
          jobs:
            - rainforest/run:
                run_group_id: 123
